"use client";
import React, { useState, useEffect, useMemo } from 'react';

const FoodSpinner = () => {
    const [selectedItem, setSelectedItem] = useState(null);
    const [isSpinning, setIsSpinning] = useState(false);
    const items = useMemo(() => 
        ['Á†ÇÈîÖü´ïsr', 
         'È∫ªËæ£ÁÉ´üå∂ü´ïssr', 
         'ÁÉßÁÉ§üçñüçóssr', 
         'Á≤•ü•£r', 
         'ÊâÅÈ£üüç•sr',
         'Ê≤ôÂéøüç•sr',
         'Â∞èÁÇíü•¨sr',
         'Á±≥Á∫øüç≤sr',
         'ÁîüËÖåüêüü•£ssr',
         'ÂÖ≥‰∏úÁÖÆüç¢sr',
         'ÂÜíËèúüå∂sr',
         'ÁÇ∏È∏°üçór',
         'ÁâõÊéíü•©sr',
         'Áî∞È∏°üê∏sr',
         'ÂØøÂè∏üç£sr',
         'Ëå∂È§êÂéÖüç≥sr',
         'È∏≠Ë°ÄÁ≤â‰∏ùü´ïsr',
         'Ê≤ôËå∂Èù¢üçúüç§ssr',
         'ËÇâËüπÁÖ≤ü•òsr',
         'Êä´Ëê®üçïüßÄsr',
         'ÁÉ§È∏≠üçñü¶Üssr',
         'Ê∞¥È•∫ü•ür',
         'Ëû∫ÁãÆÁ≤âüçúsr',
         'Èü©Êñôüçúsr',
         'ÁÑóÈ•≠üçõsr',
         'Êñ∞ÁñÜÁ±≥Á≤âüå∂sr',
         'Ê±âÂ†°üçîsr',
         'ÁÉ§ËÇâÈ•≠ü•ìr',
         '‰∫ëÂêûü•üsr',
         'È∫ªËæ£Êãåüå∂ü•ìssr',
         'ÊãâÈù¢üçúr',
         'ÂØøÂñúÁÉßü´ïsr',
         '‰æøÂΩì/Êó•ÂºèÁõñÈ•≠üç•sr',
         'Â±ÄÂè£ÊãåÈù¢üçúsr',
         'ÂÜ∑Èù¢üçúsr',
         'ÁâõËÇâÈù¢üçúsr',
         '‰πåÂÜ¨Èù¢üçúsr',
         'ÁÇñÊ±§/ÁÇñÁΩêü•£sr',
         'ËπÑËä±Ê±§ü•£sr',
         'ËõãÂåÖÈ•≠üçõsr',
         'È∏°ËõãÊ±âÂ†°üçîsr',
         'ËÇØÂæ∑Âü∫üçîsr',
         'Â∞èÈæôËôæü¶ûüå∂ssr',
         'Ê≥∞ÂõΩËèúü´îsr',
         'ÁîüÁÖé/ÈîÖË¥¥üçòsr',
         'ÈÖ∏ËèúÈ±ºüêüssr',
         'È∫ªËæ£È¶ôÈîÖüå∂ü•òssr',
         'ÊÑèÈù¢üçùsr',
         'ÂáâÁöÆ/ËÇâÂ§πÈ¶ç/ÁâõÁ≠ãÈù¢srü´ì',
         'È≤çÈ±ºÈ•≠üçösr',
         'Ëä±Áî≤Á≤âüçúsr',
         'ÈºéÊ≥∞‰∏∞ü•üüç•ssr',
         'Á≤øÊù°ü•£sr',
         'ÂßúÊØçÈ∏≠ü¶Üü•òssr',
         'ÂÖ∞Â∑ûÊãâÈù¢üçúsr',
         'Ê°ÇÊûóÁ±≥Á≤âü´ïsr',
         'ÂÜ¨Á≤âÈ∏≠ü´ïsr',
         'ÁÉ§ËÇãÊéí/Áå™ÊéíÈ•≠üçñsr',
         'ÁÉßËÇâÁ≤Ωüçôsr',
         'Ê±§ÂåÖü•üsr',
         'È∏°Êéíüêîsr',
         'ÈáåËÑäËÇâ‰∏≤ + Ê±§orÁ≤•üçñü•£ssr',
         'Âè∞ÊπæËèúüç≤sr',
         'ÁÖ≤‰ªîÈ•≠üç≤sr',
         'È∏≠ËÇâÈù¢Á∫øüç≤sr',
         'phoüçúsr',
        ], []);
    const spinWheel = () => {
      setIsSpinning(true);
      setSelectedItem(null); 
      setTimeout(() => {
        const randomIndex = Math.floor(Math.random() * items.length);
        setSelectedItem(items[randomIndex]);
        setIsSpinning(false);
      }, 3000); 
    };
  
    useEffect(() => {
      let interval;
      if (isSpinning) {
        interval = setInterval(() => {
          const randomIndex = Math.floor(Math.random() * items.length);
          setSelectedItem(items[randomIndex]);
        }, 100); 
      }
      return () => clearInterval(interval);
    }, [isSpinning, items]);
  
    return (
      <div className="flex flex-col items-center justify-center min-h-screen text-white">
        <h1 className="text-4xl font-bold mb-6 text-white py-4">‰ªäÂ§©ÂêÉ‰ªÄ‰πà</h1>
        <div className="flex flex-col items-center">
          <button 
            className="bg-gradient-to-tr from-blue-500 to-green-500 text-white font-bold py-4 px-8 rounded-full shadow-lg transform transition duration-300 hover:scale-110"
            onClick={spinWheel}
            disabled={isSpinning}
          >
            ËΩ¨‰∏Ä‰∏ã
          </button>
          {selectedItem && (
            <p className="text-white text-lg mb-6 lg:text-xl mt-4">
              ‰ªäÂ§©Â∞±ÂêÉ: <span className="text-white font-bold">{selectedItem}</span>
            </p>
          )}
        </div>
      </div>
    );
  }

export default FoodSpinner;
